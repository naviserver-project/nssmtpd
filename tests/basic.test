# -*- Tcl -*-
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://mozilla.org/
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
#
# Copyright 2006 (C) Stephen Deasey <sdeasey@gmail.com>
# Copyright 2015-2020 (C) Gustaf Neumann <neumann@wu-wien.ac.at>
#
# Alternatively, the contents of this file may be used under the terms
# of the GNU General Public License (the "GPL"), in which case the
# provisions of GPL are applicable instead of those above.  If you wish
# to allow use of your version of this file only under the terms of the
# GPL and not to allow others to use your version of this file under the
# License, indicate your decision by deleting the provisions above and
# replace them with the notice and other provisions required by the GPL.
# If you do not delete the provisions above, a recipient may use your
# version of this file under either the License or the GPL.
#
#

#
# Test the nssmtpd module
#
package require tcltest 2.2
namespace import -force ::tcltest::*
ns_logctl severity Debug(smtpd) on

::tcltest::configure {*}$argv

if {[ns_config ns/server/test/module/nssmtpd port] ne ""} {
    testConstraint serverListen true
}

test nssmtpd-1.1 {check if a basic request works} -constraints {serverListen} -setup {
    ns_register_proc GET /get {
      if {[catch {
          ns_sendmail -to neumann@wu.ac.at -from neumann@wu.ac.at -subject "hi" -body "some text"
      } result]} {
          ns_log warning "$::errorInfo"
      } else {
          set result "OK"
      }
        ns_return 200 text/plain $result
    }
} -body {
    nstest::http -http 1.0 -getbody 1 GET /get
} -cleanup {
    ns_unregister_op GET /get
} -result "200 OK"

test nssmtpd-1.2 {check if a basic request works} -constraints {serverListen} -setup {
    ns_register_proc GET /get {
        if {[catch {
            set fullMailMessage "some text\n.and more\nnext line single dot\n.\nend\nof everything."
            ns_sendmail -to neumann@wu.ac.at -from neumann@wu.ac.at -subject "hi" -body $fullMailMessage
        } result]} {
            ns_log warning "$::errorInfo"
        } else {
            set result "OK"
        }
        ns_return 200 text/plain $result
    }
} -body {
    nstest::http -http 1.0 -getbody 1 GET /get
} -cleanup {
    ns_unregister_op GET /get
} -result "200 OK"

# test nssmtpd-1.3 {check if a basic request works} -constraints {serverListen} -setup {
#     ns_register_proc GET /get {
#         if {[catch {
#             set fullMailMessage "some text\n.and more\nnext line single dot\n.\nend.\n"
#             #set port [ns_config ns/server/test/module/nssmtpd port]
#             #set addr [ns_config ns/server/test/module/nssmtpd address]
#             set port 25
#             set addr 137.208.116.20
#             ns_log notice "ns_smtpd send neumann@wu.ac.at neumann@wu.ac.at fullMailMessage $addr $port"
#             ns_smtpd send neumann@wu.ac.at neumann@wu.ac.at fullMailMessage $addr $port
#         } result]} {
#             ns_log warning "$::errorInfo"
#         } else {
#             set result "OK"
#         }
#         ns_return 200 text/plain $result
#     }
# } -body {
#     nstest::http -http 1.0 -getbody 1 GET /get
# } -cleanup {
#     ns_unregister_op GET /get
# } -result "200 OK"




cleanupTests
